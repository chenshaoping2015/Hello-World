star_test模块
test_01:
    (1)用js在新的tab页打开链接的方法;
    (2)切换句柄的方法;
    (3)断言;
test_02:
    (1)用xpath方法定位;
    (2)用WebDriverWait.until和expected_conditions.title_contains方法断言;
test_03:
    (1)通过page_source方法获得网页源码;
    (2)通过正则表达式匹配网站所有的邮箱;
    (3)循环邮箱列表并打印出来;
test_04:
    (1)通过find_element_by_id方法定位;
test_05:
    (1)用find_element_by_link_text方法定位;
test_06:
    (1)用find_element_by_class_name方法定位;
test_07:
    (1)用clear方法清除文本;
test_08:
    (1)页面前进/后退;
test_09:
    (1)通过find_elements_by_nam方法定位;
    (2)单选框radio的选中 ;
test_10:
    (1)多选框checkbox的操作;
    (2)判断多选框是否被选中is_selected();
    (3)查找出选中所有的复选框;
    (4)取消选中的复选框;
test_11:
    (1)查看select中所有的选项select.options;
    (2)查看已选中的选项select.all_selected_options;
test_12:
    (1)提取登录框的文本内容text;
test_13:
    (1)鼠标右键操作actionChains.context_click(element).perform();
    (2)选中某个选项win32api.keybd_event(73,0,0,0);
test_14:
    (1)selenium运行js操作，拖动拖动条;
    (2)弹出一个js提示弹框;
test_15:
    (1)iframe之间的切换；
test_16:
    (1)获取js弹框的文本内容；
    (2)点击弹框的确认按钮;
test_17:
    (1)用find_elements_by_tag_name方法定位；
    (2)遍历所有图片信息;
test_18:
    (1)用get_attribute方法获取页面所有href;
test_19:
    (1)用get_screenshot_as_file方法进行截图;
test_20:
    (1)div弹窗的定位方法，get_cookies()的用法;
test_21:
    (1)split()的用法;
test_22:
    (1)input标签文件上传的方法
test_23:
    (1)非input标签文件上传的方法--用AutoIt命令行的方法
test_24:
    (1)非input标签文件上传的方法--用win32gui的方法
test_25:
    (1)直接下载文件
test_26:
    (1)通过get_cookies()和add_cookie()获取和添加cookies的方式来绕过验证码登录
test_27:
    (1)读取excel表格内容，进行参数化
test_28:
    (1)selenium获取cookies
test_29:
    (1)Chrome浏览器加载配置项chromeOptions
----------------------------------------------------------------------------------
log_test：
    |--get_time 获取系统时间，设置时间格式
    |--log_test.py  log教程
    |--test_logging.py  logger.py的测试用例